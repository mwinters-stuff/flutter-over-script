// Mocks generated by Mockito 5.0.17 from annotations
// in overscript/test/script_store_bloc_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:overscript/repositories/repositories.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ScriptsStoreRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockScriptsStoreRepository extends _i1.Mock
    implements _i2.ScriptsStoreRepository {
  MockScriptsStoreRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool checkNameUsed(String? name) =>
      (super.noSuchMethod(Invocation.method(#checkNameUsed, [name]),
          returnValue: false) as bool);
  @override
  void load(String? filename) =>
      super.noSuchMethod(Invocation.method(#load, [filename]),
          returnValueForMissingStub: null);
  @override
  _i2.StoredScript? get(String? uuid) =>
      (super.noSuchMethod(Invocation.method(#get, [uuid]))
          as _i2.StoredScript?);
  @override
  void add(
          {String? uuid,
          String? name,
          String? command,
          List<String>? args,
          String? workingDirectory,
          bool? runInDocker,
          Map<String, String>? envVars}) =>
      super.noSuchMethod(
          Invocation.method(#add, [], {
            #uuid: uuid,
            #name: name,
            #command: command,
            #args: args,
            #workingDirectory: workingDirectory,
            #runInDocker: runInDocker,
            #envVars: envVars
          }),
          returnValueForMissingStub: null);
  @override
  void edit(
          {String? uuid,
          String? name,
          String? command,
          List<String>? args,
          String? workingDirectory,
          bool? runInDocker,
          Map<String, String>? envVars}) =>
      super.noSuchMethod(
          Invocation.method(#edit, [], {
            #uuid: uuid,
            #name: name,
            #command: command,
            #args: args,
            #workingDirectory: workingDirectory,
            #runInDocker: runInDocker,
            #envVars: envVars
          }),
          returnValueForMissingStub: null);
  @override
  void delete(String? uuid) =>
      super.noSuchMethod(Invocation.method(#delete, [uuid]),
          returnValueForMissingStub: null);
  @override
  void save(String? filename) =>
      super.noSuchMethod(Invocation.method(#save, [filename]),
          returnValueForMissingStub: null);
}
